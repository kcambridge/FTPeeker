@model FTPeeker.Models.ViewModels.VMUpload

@{
    ViewBag.Title = "Upload";
}
<div class="container">
    @if (ViewData.ModelState.IsValid)
    {
        if (Model.response != null)
        {
            <div class="col-sm-12">
                <div class="col-sm-12 center-block" align="center">
                   
                    @if (Model.response.success)
                    {
                        <div class="alert alert-success col-md-12 fadeAlert" role="alert" align="center">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <strong>@Model.response.message</strong>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger col-md-12" role="alert" align="center">
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <strong>@Model.response.message</strong>
                        </div>
                    }
                    
                </div>
            </div>

        }

    }
 </div>
        <br />
        <h3>@Html.ActionLink("FTP Sites", "Index") / @Html.ActionLink(Model.siteName, "Browse", new { id = Model.id, path = Model.path }) / Upload</h3>
        <br />
        @using (Html.BeginForm("Upload", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.id)
            <input type="hidden" id="path" name="path" value="@Model.path" />
            <input type="hidden" id="siteName" name="siteName" value="@Model.siteName" />
            <div class="form-horizontal">
                <h4>Uploading to <strong>@Model.path</strong></h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.files, "Select file(s)", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.files, "", new { @type = "file", @multiple = "multiple", @class = "form-control " })
                        @Html.ValidationMessageFor(model => model.files, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Upload" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    


